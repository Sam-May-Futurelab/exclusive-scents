{% comment %}
  Reviews Panel Carousel (Pro)
  - Matches modern "big panel + 5 gold stars" aesthetic
  - Desktop shows up to 3 review cards in the panel view; mobile shows 1
  - Uses scroll-snap + JS for single-step, stable navigation
{% endcomment %}

<section id="reviews-panel-{{ section.id }}" class="rvp {{ section.settings.section_class }}">
  <div class="rvp__inner page-width">

    <!-- Header -->
    <header class="rvp__head">
      <h2 class="rvp__title">{{ section.settings.title | default: "Customer reviews" }}</h2>
      <div class="rvp__stars" aria-label="Five star rating">
        {% capture star_svg %}
          <svg class="rvp__star" viewBox="0 0 24 24" aria-hidden="true">
            <defs>
              <linearGradient id="rvp-gold-{{ section.id }}" x1="0" y1="0" x2="1" y2="1">
                <stop offset="0%" stop-color="{{ section.settings.star_light | default: '#FDE68A' }}"/>
                <stop offset="50%" stop-color="{{ section.settings.star_mid | default: '#F59E0B' }}"/>
                <stop offset="100%" stop-color="{{ section.settings.star_dark | default: '#B45309' }}"/>
              </linearGradient>
            </defs>
            <path fill="url(#rvp-gold-{{ section.id }})" d="M12 2.2l2.8 5.7 6.3.9-4.6 4.4 1.1 6.3L12 16.9l-5.6 2.9 1.1-6.3-4.6-4.4 6.3-.9L12 2.2z"/>
          </svg>
        {% endcapture %}
        {{ star_svg }}{{ star_svg }}{{ star_svg }}{{ star_svg }}{{ star_svg }}
      </div>
    </header>

    <!-- Panel -->
    <div class="rvp__viewport" role="region" aria-label="Customer reviews">
      {% if section.settings.show_arrows %}
      <button class="rvp__nav rvp__nav--prev" type="button" aria-label="Previous">
        <span aria-hidden="true">‹</span>
      </button>
      {% endif %}

      <ul class="rvp__track"
          data-autoplay="{{ section.settings.autoplay | json }}"
          data-interval="{{ section.settings.autoplay_interval | default: 3600 }}"
          data-loop="{{ section.settings.loop | json }}">
        {% for block in section.blocks %}
          {% if block.type == 'review' %}
          <li class="rvp__slide" {{ block.shopify_attributes }}>
            <figure class="rvp__card">
              {% if block.settings.image != blank %}
                {% assign img = block.settings.image %}
                <img
                  class="rvp__img"
                  src="{{ img | image_url: width: 1200 }}"
                  srcset="
                    {{ img | image_url: width: 600 }} 600w,
                    {{ img | image_url: width: 900 }} 900w,
                    {{ img | image_url: width: 1200 }} 1200w
                  "
                  sizes="(max-width: 740px) 100vw, 320px"
                  alt="{{ block.settings.alt | escape }}"
                  loading="lazy" decoding="async">
              {% else %}
                <div class="rvp__ph" aria-hidden="true">Add review image</div>
              {% endif %}
            </figure>
          </li>
          {% endif %}
        {% endfor %}
      </ul>

      {% if section.settings.show_arrows %}
      <button class="rvp__nav rvp__nav--next" type="button" aria-label="Next">
        <span aria-hidden="true">›</span>
      </button>
      {% endif %}
    </div>

    {% if section.settings.show_dots %}
    <div class="rvp__dots" aria-hidden="true"></div>
    {% endif %}

  </div>

  <style>
    .rvp {
      --txt: #0f172a;
      --muted: #64748b;
      --edge: color-mix(in oklab, #000 7%, #fff);
      --panel-bg: #fff;
      --panel-shadow: 0 18px 60px rgba(2,6,23,.10);
      --radius: {{ section.settings.radius | default: 20 }}px;
      --dot: #e5e7eb;
      --dot-active: #0f172a;
      --card-edge: color-mix(in oklab, #000 6%, #fff);
      --aspect-w: {{ section.settings.aspect_w | default: 16 }};
      --aspect-h: {{ section.settings.aspect_h | default: 9 }};
      font-family: var(--font-body-family, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Inter, Roboto, Arial, sans-serif);
    }

    .rvp__head { text-align:center; margin-bottom: 14px; }
    .rvp__title {
      margin: 0 0 6px;
      font-weight: 800; letter-spacing: -.01em;
      font-size: clamp(22px, 2.6vw, 36px);
      color: var(--txt);
    }
    .rvp__stars { display:flex; gap:8px; justify-content:center; }
    .rvp__star { width: 18px; height: 18px; display:block; }

    /* Panel viewport */
    .rvp__viewport {
      position: relative;
      background: var(--panel-bg);
      border: 1px solid var(--edge);
      box-shadow: var(--panel-shadow);
      border-radius: var(--radius);
      padding: clamp(14px, 2vw, 22px);
      overflow: hidden;
    }

    /* Track shows multiple cards inside the single big panel */
    .rvp__track {
      display: grid;
      grid-auto-flow: column;
      /* Each snap slide is a single review CARD; we allow 1–3 visible at once via column width */
      grid-auto-columns: calc((100% - var(--gap) * 2) / 3);
      --gap: clamp(10px, 1.6vw, 16px);
      gap: var(--gap);
      overflow-x: auto;
      padding: 4px;
      margin: 0;
      list-style: none;
      scroll-snap-type: x mandatory;
      scroll-behavior: smooth;
      -webkit-overflow-scrolling: touch;
    }

    /* Mobile: 1-up; Tablet: 2-up; Desktop: 3-up */
    @media (max-width: 980px) {
      .rvp__track { grid-auto-columns: calc((100% - var(--gap)) / 2); }
    }
    @media (max-width: 640px) {
      .rvp__track { grid-auto-columns: 100%; }
    }

    .rvp__track::-webkit-scrollbar { height: 8px; }
    .rvp__track::-webkit-scrollbar-thumb { background: #e5e7eb; border-radius: 8px; }

    .rvp__slide {
      scroll-snap-align: center;
      scroll-snap-stop: always;
    }

    /* Review card (your screenshot framed like a quote card) */
    .rvp__card {
      border-radius: calc(var(--radius) - 8px);
      background: #fff;
      border: 1px solid var(--card-edge);
      box-shadow: 0 6px 22px rgba(2,6,23,.06);
      overflow: hidden;
      position: relative;
    }
    .rvp__img {
      width: 100%; display: block;
      aspect-ratio: var(--aspect-w) / var(--aspect-h);
      object-fit: cover;
      transform: translateZ(0);
      transition: transform 220ms ease;
    }
    .rvp__card:hover .rvp__img { transform: scale(1.01); }

    .rvp__ph {
      display:flex; align-items:center; justify-content:center;
      min-height: 240px; background:#f3f4f6; color:#9ca3af; font-size:14px;
    }

    /* Arrows like your ref: circular pills on panel edges */
    .rvp__nav {
      position: absolute; top: 50%; transform: translateY(-50%);
      width: 46px; height: 46px; border-radius: 999px;
      border: 1px solid var(--edge);
      background: #fff;
      box-shadow: 0 8px 24px rgba(2,6,23,.08);
      display:grid; place-items:center;
      cursor:pointer; z-index: 2;
      transition: transform 120ms ease, box-shadow 120ms ease, background 120ms ease;
    }
    .rvp__nav:hover { transform: translateY(-50%) scale(1.04); box-shadow: 0 10px 30px rgba(2,6,23,.12); }
    .rvp__nav--prev { left: 10px; }
    .rvp__nav--next { right: 10px; }
    .rvp__nav span { font-size: 22px; line-height: 1; color: var(--txt); }

    /* Dots */
    .rvp__dots { display:flex; gap:8px; justify-content:center; padding: 12px 0 0; }
    .rvp__dots button {
      width: 8px; height: 8px; border-radius: 999px; border: 0;
      background: var(--dot); cursor: pointer;
      transition: width 160ms ease, background 160ms ease;
    }
    .rvp__dots button[aria-current="true"] { background: var(--dot-active); width: 18px; border-radius: 6px; }

    @media (prefers-reduced-motion: reduce) {
      .rvp__track { scroll-behavior: auto; }
      .rvp__img, .rvp__nav { transition: none; }
    }
  </style>

  <script>
    (() => {
      const section = document.getElementById("reviews-panel-{{ section.id }}");
      if (!section) return;

      const track = section.querySelector(".rvp__track");
      const slides = Array.from(section.querySelectorAll(".rvp__slide"));
      if (!track || slides.length === 0) return;

      const btnPrev = section.querySelector(".rvp__nav--prev");
      const btnNext = section.querySelector(".rvp__nav--next");
      const dotsWrap = section.querySelector(".rvp__dots");

      // Build dots once (based on number of "pages" = number of slides)
      const buildDots = () => {
        if (!dotsWrap) return [];
        dotsWrap.innerHTML = "";
        return slides.map((_, i) => {
          const b = document.createElement("button");
          b.type = "button";
          b.setAttribute("aria-label", "Go to slide " + (i+1));
          b.addEventListener("click", () => goTo(i, true));
          dotsWrap.appendChild(b);
          return b;
        });
      };
      const dots = buildDots();

      let index = 0;
      const clamp = (n, min, max) => Math.max(min, Math.min(max, n));
      const loop = track.dataset.loop === "true";
      const autoplay = track.dataset.autoplay === "true";
      const interval = parseInt(track.dataset.interval || "3600", 10);

      const snapTo = (i) => {
        slides[i]?.scrollIntoView({ behavior: "smooth", inline: "center", block: "nearest" });
        setDots(i);
      };

      const setDots = (i) => {
        if (!dots.length) return;
        dots.forEach((d, di) => d.setAttribute("aria-current", di === i ? "true" : "false"));
      };

      const goTo = (i, user) => {
        if (!loop) index = clamp(i, 0, slides.length - 1);
        else {
          if (i < 0) index = slides.length - 1;
          else if (i >= slides.length) index = 0;
          else index = i;
        }
        snapTo(index);
        if (user) resetAutoplay();
      };

      const next = () => goTo(index + 1, false);
      const prev = () => goTo(index - 1, false);

      btnNext?.addEventListener("click", next);
      btnPrev?.addEventListener("click", prev);

      // Keep index synced when user scrolls/swipes
      const io = new IntersectionObserver((entries) => {
        entries.forEach((e) => {
          if (e.isIntersecting && e.intersectionRatio > 0.6) {
            const ni = slides.indexOf(e.target);
            if (ni !== -1) { index = ni; setDots(index); }
          }
        });
      }, { root: track, threshold: [0.6] });
      slides.forEach(s => io.observe(s));

      // Autoplay (pause on hover & when hidden)
      let timer = null;
      const startAutoplay = () => {
        if (!autoplay || window.matchMedia("(prefers-reduced-motion: reduce)").matches) return;
        stopAutoplay();
        timer = setInterval(() => {
          if (document.hidden || track.matches(":active")) return;
          next();
        }, Math.max(1600, interval));
      };
      const stopAutoplay = () => { if (timer) { clearInterval(timer); timer = null; } };
      const resetAutoplay = () => { stopAutoplay(); startAutoplay(); };

      section.querySelector(".rvp__viewport")?.addEventListener("mouseenter", stopAutoplay);
      section.querySelector(".rvp__viewport")?.addEventListener("mouseleave", startAutoplay);
      document.addEventListener("visibilitychange", () => { document.hidden ? stopAutoplay() : startAutoplay(); });

      // Init
      setDots(0); startAutoplay(); requestAnimationFrame(() => snapTo(0));
    })();
  </script>

  {% schema %}
  {
    "name": "Reviews Panel ",
    "tag": "section",
    "class": "reviews-panel-carousel",
    "settings": [
      { "type": "text", "id": "title", "label": "Title", "default": "Customer reviews" },

      { "type": "color", "id": "star_light", "label": "Star gradient (light)", "default": "#FDE68A" },
      { "type": "color", "id": "star_mid",   "label": "Star gradient (mid)",   "default": "#F59E0B" },
      { "type": "color", "id": "star_dark",  "label": "Star gradient (dark)",  "default": "#B45309" },

      { "type": "checkbox", "id": "show_arrows", "label": "Show arrows", "default": true },
      { "type": "checkbox", "id": "show_dots",   "label": "Show dots",   "default": true },
      { "type": "checkbox", "id": "autoplay",    "label": "Autoplay",    "default": true },
      { "type": "range", "id": "autoplay_interval", "label": "Autoplay interval (ms)", "min": 1500, "max": 8000, "step": 100, "default": 3600 },
      { "type": "checkbox", "id": "loop", "label": "Loop slides", "default": true },

      { "type": "range", "id": "radius", "label": "Panel corner radius", "min": 12, "max": 28, "step": 1, "default": 20 },

      { "type": "number", "id": "aspect_w", "label": "Card aspect width", "default": 16 },
      { "type": "number", "id": "aspect_h", "label": "Card aspect height", "default": 9 },

      { "type": "text", "id": "section_class", "label": "Custom CSS class" }
    ],
    "blocks": [
      {
        "type": "review",
        "name": "Review image",
        "settings": [
          { "type": "image_picker", "id": "image", "label": "Screenshot (rectangle)" },
          { "type": "text", "id": "alt", "label": "Alt text", "default": "Customer review screenshot" }
        ]
      }
    ],
    "max_blocks": 60,
    "presets": [
      { "name": "Reviews Panel Carousel (Pro)", "category": "Testimonials" }
    ]
  }
  {% endschema %}
</section>
