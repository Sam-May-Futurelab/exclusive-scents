{% comment %}
  TikTok MP4 Grid — inline modal player + TikTok logo link + CTA button
  - Each tile uses your MP4 (Shopify CDN) for fast, reliable playback in a modal.
  - TikTok badge (top-right) links to your TikTok URL in a new tab.
  - Clean thumbnails: upload per block (recommended). Falls back to gradient; optional auto-capture not required.
  - New: CTA button (“Follow on TikTok”) with editable label + link.
{% endcomment %}

<section id="ttmp4-{{ section.id }}" class="ttmp4-wrap">
  <style>
    #ttmp4-{{ section.id }}{
      --bg: {{ section.settings.bg | default: '#ffffff' }};
      --gap: {{ section.settings.gap | default: 6 }}px;
      --radius: {{ section.settings.radius | default: 12 }}px;
      --btn: #1299f3;
      --btn-tx: #fff;
      padding: {{ section.settings.pad_y | default: 28 }}px 0;
      background: var(--bg);
    }
    .ttmp4-container{ max-width: {{ section.settings.max_w | default: 1200 }}px; margin:0 auto; padding:0 16px; }
    .ttmp4-head{ display:flex; align-items:flex-end; justify-content:space-between; gap:14px; margin-bottom:16px; }
    .ttmp4-title{ font-size:clamp(22px,2.4vw,28px); font-weight:800; letter-spacing:-.02em; }
    .ttmp4-sub{ color:#6b7280; max-width:70ch; }

    .ttmp4-grid{ display:grid; gap:var(--gap); grid-template-columns:repeat(2,1fr); }
    @media (min-width:640px){ .ttmp4-grid{ grid-template-columns:repeat(3,1fr);} }
    @media (min-width:1024px){ .ttmp4-grid{ grid-template-columns:repeat(4,1fr);} }

    .ttmp4-card{
      position:relative; width:100%; aspect-ratio:1/1; border-radius:var(--radius);
      overflow:hidden; background:#0f172a; cursor:pointer;
    }
    @supports not (aspect-ratio:1/1){ .ttmp4-card::before{ content:""; display:block; padding-top:100%; } }

    .ttmp4-media{
      position:absolute; inset:0; background-size:cover; background-position:center;
      transition:transform .35s ease, filter .35s ease; filter:saturate(1.05) contrast(1.02);
    }
    .ttmp4-card:hover .ttmp4-media{ transform:scale(1.035); }
    .ttmp4-grad{ position:absolute; inset:0; background:linear-gradient(180deg, rgba(0,0,0,0) 40%, rgba(0,0,0,.28) 100%); }

    .ttmp4-play{
      position:absolute; left:50%; top:50%; transform:translate(-50%,-50%);
      width:56px; height:56px; border-radius:999px; display:grid; place-items:center;
      color:#fff; background:rgba(0,0,0,.55); border:1px solid rgba(255,255,255,.25);
      pointer-events:none;
    }
    .ttmp4-play svg{ width:20px; height:20px; margin-left:2px; }

    /* TikTok badge per tile */
    .ttmp4-tt{
      position:absolute; right:8px; top:8px; z-index:2;
      display:inline-flex; align-items:center; gap:6px; padding:6px 8px;
      font-size:12px; font-weight:800; color:#fff; text-decoration:none;
      background:rgba(0,0,0,.55); border:1px solid rgba(255,255,255,.18);
      border-radius:999px; backdrop-filter:saturate(120%) blur(6px);
    }
    .ttmp4-tt svg{ width:14px; height:14px; }

    /* CTA button */
    .ttmp4-cta{ display:flex; justify-content:center; margin-top:20px; }
    .ttmp4-cta a{
      display:inline-flex; align-items:center; gap:10px;
      background:var(--btn); color:var(--btn-tx);
      padding:10px 16px; border-radius:10px; font-weight:800;
      box-shadow:0 10px 30px rgba(0,0,0,.08); text-decoration:none;
    }
    .ttmp4-cta svg{ width:18px; height:18px; }

    /* Modal */
    .ttmp4-modal{ position:fixed; inset:0; background:rgba(0,0,0,.6); display:none; place-items:center; z-index:9999; padding:20px; }
    .ttmp4-modal.is-open{ display:grid; }
    .ttmp4-box{ width:min(920px,92vw); background:#000; border-radius:14px; overflow:hidden; position:relative; box-shadow:0 20px 60px rgba(0,0,0,.45); }
    .ttmp4-close{
      position:absolute; top:8px; right:8px; z-index:2; width:36px; height:36px; display:grid; place-items:center;
      border-radius:999px; background:rgba(255,255,255,.15); color:#fff; border:1px solid rgba(255,255,255,.25); cursor:pointer;
    }
    .ttmp4-embed{ background:#000; aspect-ratio:9/16; width:100%; }
    @supports not (aspect-ratio:9/16){
      .ttmp4-embed{ position:relative; padding-top:177.78%; }
      .ttmp4-embed > *{ position:absolute; inset:0; width:100%; height:100%; }
    }

    @media (prefers-reduced-motion:reduce){
      .ttmp4-media{ transition:none !important; }
    }
  </style>

  <div class="ttmp4-container">
    {% if section.settings.heading != blank or section.settings.subhead != blank %}
      <div class="ttmp4-head">
        {% if section.settings.heading != blank %}<h2 class="ttmp4-title">{{ section.settings.heading }}</h2>{% endif %}
        {% if section.settings.subhead != blank %}<div class="ttmp4-sub">{{ section.settings.subhead }}</div>{% endif %}
      </div>
    {% endif %}

    <div class="ttmp4-grid">
      {% for block in section.blocks %}
        {% assign mp4  = block.settings.mp4_url | strip %}
        {% assign tt   = block.settings.tiktok_url | strip %}
        {% assign thumb = block.settings.thumb | image_url: width: 1200 | default: '' %}

        <div class="ttmp4-card" role="button" tabindex="0"
             data-mp4="{{ mp4 | escape }}"
             data-thumb="{{ thumb | escape }}"
             aria-label="Play video {{ forloop.index }}">
          {% if tt != blank %}
            <a class="ttmp4-tt" href="{{ tt }}" target="_blank" rel="noopener" aria-label="Open on TikTok">
              <svg viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M12.9 2.1c.3 2.6 1.8 4.3 4.3 4.6v2.6c-1.7.2-3.1-.3-4.6-1.3v6.4c0 4-2.6 5.6-5.2 5.6-2.6 0-5-1.9-5-5 0-3 2.2-4.7 4.8-4.9v2.7c-1.3.2-2.1 1-2.1 2.2 0 1.3 1 2.3 2.5 2.3 1.6 0 2.6-1 2.6-2.9V2.1h2.7z"/></svg>
              TikTok
            </a>
          {% endif %}

          <span class="ttmp4-media"
                style="{% if thumb != '' %}background-image:url('{{ thumb }}');{% else %}background-image:linear-gradient(135deg,#1f2937,#0f172a);{% endif %}"></span>
          <span class="ttmp4-grad" aria-hidden="true"></span>
          <span class="ttmp4-play" aria-hidden="true">
            <svg viewBox="0 0 24 24" fill="currentColor"><path d="M8 5v14l11-7z"/></svg>
          </span>
        </div>
      {% endfor %}
    </div>

    {% if section.settings.cta_show and section.settings.cta_label != blank and section.settings.cta_url != blank %}
      <div class="ttmp4-cta">
        <a href="{{ section.settings.cta_url }}" target="_blank" rel="noopener">
          <svg viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M12.9 2.1c.3 2.6 1.8 4.3 4.3 4.6v2.6c-1.7.2-3.1-.3-4.6-1.3v6.4c0 4-2.6 5.6-5.2 5.6-2.6 0-5-1.9-5-5 0-3 2.2-4.7 4.8-4.9v2.7c-1.3.2-2.1 1-2.1 2.2 0 1.3 1 2.3 2.5 2.3 1.6 0 2.6-1 2.6-2.9V2.1h2.7z"/></svg>
          {{ section.settings.cta_label }}
        </a>
      </div>
    {% endif %}
  </div>

  <!-- Modal -->
  <div class="ttmp4-modal" data-modal>
    <div class="ttmp4-box">
      <button class="ttmp4-close" data-close aria-label="Close">
        <svg viewBox="0 0 24 24" width="18" height="18" fill="none" stroke="currentColor" stroke-width="2"><path d="M18 6 6 18M6 6l12 12"/></svg>
      </button>
      <div class="ttmp4-embed" data-embed></div>
    </div>
  </div>

  <script>
    (function(){
      const root   = document.getElementById('ttmp4-{{ section.id }}');
      if(!root) return;

      const cards  = Array.from(root.querySelectorAll('.ttmp4-card'));
      const modal  = root.querySelector('[data-modal]');
      const embed  = root.querySelector('[data-embed]');
      const closeB = root.querySelector('[data-close]');

      function openModal(){ modal.classList.add('is-open'); }
      function closeModal(){ modal.classList.remove('is-open'); embed.innerHTML = ''; }

      function playMP4(mp4, poster){
        openModal();
        embed.innerHTML = '';
        const v = document.createElement('video');
        v.src = mp4;
        if(poster) v.setAttribute('poster', poster);
        v.setAttribute('controls','true');
        v.setAttribute('playsinline','true');
        v.setAttribute('preload','metadata');
        v.muted = true;  // allow autoplay after click
        v.style.width = '100%'; v.style.height = '100%';
        embed.appendChild(v);
        const p = v.play(); if(p && p.catch) p.catch(()=>{});
      }

      cards.forEach(card=>{
        const mp4    = card.getAttribute('data-mp4') || '';
        const thumb  = card.getAttribute('data-thumb') || '';
        const media  = card.querySelector('.ttmp4-media');

        const open = ()=>{ if(mp4) playMP4(mp4, thumb || ''); };

        card.addEventListener('click', (e)=>{
          if(e.target.closest && e.target.closest('.ttmp4-tt')) return; // badge click
          open();
        });
        card.addEventListener('keydown', (e)=>{
          if(e.key === 'Enter' || e.key === ' '){ e.preventDefault(); open(); }
        });
      });

      closeB.addEventListener('click', closeModal);
      modal.addEventListener('click', (e)=>{ if(e.target === modal) closeModal(); });
      document.addEventListener('keydown', (e)=>{ if(e.key === 'Escape') closeModal(); });
    })();
  </script>
</section>

{% schema %}
{
  "name": "TikTok MP4 Grid (Modal)",
  "class": "section",
  "settings": [
    { "type": "text", "id": "heading", "label": "Heading", "default": "Follow our latest" },
    { "type": "text", "id": "subhead", "label": "Subtitle", "default": "New drops, behind the scenes, and community moments." },
    { "type": "range", "id": "max_w", "label": "Max width (px)", "min": 800, "max": 1600, "step": 20, "default": 1200 },
    { "type": "range", "id": "gap", "label": "Grid gap (px)", "min": 2, "max": 18, "step": 1, "default": 8 },
    { "type": "range", "id": "radius", "label": "Card radius (px)", "min": 0, "max": 24, "step": 1, "default": 12 },
    { "type": "range", "id": "pad_y", "label": "Vertical padding", "min": 0, "max": 100, "step": 2, "default": 28 },
    { "type": "color", "id": "bg", "label": "Background", "default": "#ffffff" },

    { "type": "checkbox", "id": "cta_show", "label": "Show CTA button", "default": true },
    { "type": "text", "id": "cta_label", "label": "Button label", "default": "Follow on TikTok" },
    { "type": "url",  "id": "cta_url",   "label": "Button URL" }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Video",
      "settings": [
        { "type": "text", "id": "mp4_url", "label": "MP4 video URL (Shopify CDN)", "info": "Paste the full .mp4 URL from Content > Files." },
        { "type": "text", "id": "tiktok_url", "label": "TikTok URL (badge link)", "info": "Opens when the TikTok badge is clicked." },
        { "type": "image_picker", "id": "thumb", "label": "Thumbnail (recommended)", "info": "Square image used for the tile and video poster." }
      ]
    }
  ],
  "presets": [
    {
      "name": "TikTok MP4 Grid (Modal)",
      "blocks": [
        {
          "type": "video",
          "settings": {
            "mp4_url": "https://cdn.shopify.com/videos/c/o/v/cb24bf4a39b541a089259a9300c9ec3e.mp4",
            "tiktok_url": "https://www.tiktok.com/@smellgood354/video/7483410020869180694?_r=1&_t=ZN-8zUxRYgnyP0AND"
          }
        }
      ]
    }
  ]
}
{% endschema %}
