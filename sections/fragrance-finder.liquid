{% comment %}
  Fragrance Finder Section
  Helps customers discover fragrances based on their preferences
{% endcomment %}

<div class="fragrance-finder section-{{ section.id }}-padding color-{{ section.settings.color_scheme }}">
  <div class="page-width">
    <div class="fragrance-finder__content">
      {% if section.settings.title != blank %}
        <div class="fragrance-finder__header">
          <h1 class="fragrance-finder__title h2">{{ section.settings.title }}</h1>
          {% if section.settings.description != blank %}
            <div class="fragrance-finder__description rte">
              {{ section.settings.description }}
            </div>
          {% endif %}
        </div>
      {% endif %}

      <div class="fragrance-finder__filters">
        <div class="filter-group">
          <h3 class="filter-title">Scent Families</h3>
          <div class="filter-options" data-filter-type="family">
            <button class="filter-btn" data-filter="Citrus">üçä Citrus</button>
            <button class="filter-btn" data-filter="Floral Notes">üå∏ Floral</button>
            <button class="filter-btn" data-filter="Woody Notes">üå≤ Woody</button>
            <button class="filter-btn" data-filter="Amber">üåü Amber</button>
            <button class="filter-btn" data-filter="Fresh">üíß Fresh</button>
            <button class="filter-btn" data-filter="Spicy">üå∂Ô∏è Spicy</button>
          </div>
        </div>

        <div class="filter-group">
          <h3 class="filter-title">Popular Notes</h3>
          <div class="filter-options" data-filter-type="notes">
            <button class="filter-btn" data-filter="Vanilla">Vanilla</button>
            <button class="filter-btn" data-filter="Bergamot">Bergamot</button>
            <button class="filter-btn" data-filter="Amber">Amber</button>
            <button class="filter-btn" data-filter="Patchouli">Patchouli</button>
            <button class="filter-btn" data-filter="Jasmine">Jasmine</button>
            <button class="filter-btn" data-filter="Rose">Rose</button>
            <button class="filter-btn" data-filter="Sandalwood">Sandalwood</button>
            <button class="filter-btn" data-filter="Musk">Musk</button>
            <button class="filter-btn" data-filter="Cedar">Cedar</button>
            <button class="filter-btn" data-filter="Lemon">Lemon</button>
            <button class="filter-btn" data-filter="Orange Blossom">Orange Blossom</button>
            <button class="filter-btn" data-filter="Tonka Bean">Tonka Bean</button>
            <button class="filter-btn" data-filter="Pink Pepper">Pink Pepper</button>
            <button class="filter-btn" data-filter="Saffron">Saffron</button>
            <button class="filter-btn" data-filter="Oud">Oud</button>
          </div>
        </div>

        <div class="filter-group">
          <h3 class="filter-title">Additional Notes</h3>
          <div class="filter-options" data-filter-type="additional">
            <button class="filter-btn" data-filter="Cardamom">Cardamom</button>
            <button class="filter-btn" data-filter="Mandarin Orange">Mandarin Orange</button>
            <button class="filter-btn" data-filter="Neroli">Neroli</button>
            <button class="filter-btn" data-filter="Ginger">Ginger</button>
            <button class="filter-btn" data-filter="Grapefruit">Grapefruit</button>
            <button class="filter-btn" data-filter="Oakmoss">Oakmoss</button>
            <button class="filter-btn" data-filter="Lavender">Lavender</button>
            <button class="filter-btn" data-filter="Vetiver">Vetiver</button>
            <button class="filter-btn" data-filter="Incense">Incense</button>
            <button class="filter-btn" data-filter="Cinnamon">Cinnamon</button>
            <button class="filter-btn" data-filter="Coffee">Coffee</button>
            <button class="filter-btn" data-filter="Coconut">Coconut</button>
          </div>
        </div>

        <div class="filter-group">
          <h3 class="filter-title">Intensity</h3>
          <div class="filter-options" data-filter-type="intensity">
            <button class="filter-btn" data-filter="light">Light & Airy</button>
            <button class="filter-btn" data-filter="medium">Medium</button>
            <button class="filter-btn" data-filter="strong">Bold & Intense</button>
          </div>
        </div>

        <div class="filter-group">
          <h3 class="filter-title">Occasion</h3>
          <div class="filter-options" data-filter-type="occasion">
            <button class="filter-btn" data-filter="daytime">Daytime</button>
            <button class="filter-btn" data-filter="evening">Evening</button>
            <button class="filter-btn" data-filter="casual">Casual</button>
            <button class="filter-btn" data-filter="formal">Formal</button>
          </div>
        </div>

        <div class="filter-actions">
          <button class="btn btn-primary" id="find-fragrances">Find My Fragrances</button>
          <button class="btn btn-secondary" id="clear-filters">Clear All</button>
        </div>
      </div>

      <div class="fragrance-finder__results" id="fragrance-results">
        <div class="results-header">
          <h3 class="results-title">Recommended Fragrances</h3>
          <div class="results-count"></div>
        </div>
        <div class="results-grid" id="results-grid">
          <!-- Results will be populated by JavaScript -->
        </div>
        <div class="no-results" id="no-results" style="display: none;">
          <h4>No fragrances found</h4>
          <p>Try adjusting your filters or browse all our fragrances.</p>
          <a href="/collections/all" class="btn btn-outline">View All Fragrances</a>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .fragrance-finder {
    padding: 6rem 0;
    background: linear-gradient(135deg, rgba(var(--color-background), 1) 0%, rgba(var(--color-background), 0.95) 100%);
    position: relative;
  }

  .fragrance-finder::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at 20% 80%, rgba(201, 176, 55, 0.08) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(244, 230, 123, 0.06) 0%, transparent 50%);
    pointer-events: none;
  }

  .fragrance-finder__header {
    text-align: center;
    margin-bottom: 5rem;
    position: relative;
    z-index: 1;
  }

  .fragrance-finder__title {
    font-size: 4.5rem;
    margin-bottom: 2rem;
    font-weight: 700;
    letter-spacing: -0.02em;
    background: linear-gradient(135deg, #C9B037 0%, #F4E67B 50%, #C9B037 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    position: relative;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .fragrance-finder__title::after {
    content: '';
    position: absolute;
    bottom: -0.5rem;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background: linear-gradient(90deg, #C9B037, #F4E67B, #C9B037);
    border-radius: 2px;
  }

  @media screen and (max-width: 768px) {
    .fragrance-finder__title {
      font-size: 3rem;
    }
  }

  .fragrance-finder__description {
    font-size: 1.6rem;
    opacity: 0.85;
    max-width: 700px;
    margin: 0 auto;
    line-height: 1.6;
    font-weight: 400;
  }

  @media screen and (max-width: 768px) {
    .fragrance-finder__description {
      font-size: 1.4rem;
    }
  }

  .fragrance-finder__filters {
    margin-bottom: 5rem;
    position: relative;
    z-index: 1;
  }

  .filter-group {
    margin-bottom: 3rem;
    padding: 3rem;
    background: rgba(var(--color-background), 1);
    border-radius: 2rem;
    box-shadow: 
      inset 8px 8px 16px rgba(0, 0, 0, 0.1),
      inset -8px -8px 16px rgba(255, 255, 255, 0.9),
      4px 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid rgba(var(--color-foreground), 0.05);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .filter-group::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #C9B037, #F4E67B, #C9B037);
    opacity: 0.6;
  }

  .filter-group:hover {
    box-shadow: 
      inset 6px 6px 12px rgba(0, 0, 0, 0.08),
      inset -6px -6px 12px rgba(255, 255, 255, 0.95),
      6px 6px 24px rgba(0, 0, 0, 0.12);
    transform: translateY(-3px);
  }

  .filter-title {
    font-size: 2rem;
    font-weight: 600;
    margin-bottom: 2rem;
    color: rgb(var(--color-foreground));
    text-align: center;
    letter-spacing: -0.01em;
  }

  @media screen and (max-width: 768px) {
    .filter-title {
      font-size: 1.7rem;
    }
  }

  .filter-options {
    display: flex;
    flex-wrap: wrap;
    gap: 1.2rem;
    justify-content: center;
  }

  .filter-btn {
    padding: 1.2rem 2rem;
    background: rgba(var(--color-background), 1);
    border: 1px solid rgba(var(--color-foreground), 0.15);
    border-radius: 3rem;
    font-size: 1.3rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    color: rgb(var(--color-foreground));
    position: relative;
    box-shadow: 
      4px 4px 8px rgba(0, 0, 0, 0.1),
      -4px -4px 8px rgba(255, 255, 255, 0.9),
      inset 2px 2px 4px rgba(0, 0, 0, 0.05);
    text-transform: capitalize;
    letter-spacing: 0.01em;
  }

  .filter-btn::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 1rem;
    transform: translateY(-50%);
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: linear-gradient(135deg, #C9B037, #F4E67B);
    opacity: 0;
    transition: all 0.3s ease;
  }

  .filter-btn:hover {
    background: rgba(var(--color-background), 1);
    transform: translateY(-3px);
    box-shadow: 
      6px 6px 12px rgba(0, 0, 0, 0.15),
      -6px -6px 12px rgba(255, 255, 255, 0.95),
      inset 1px 1px 2px rgba(0, 0, 0, 0.03);
    border-color: rgba(201, 176, 55, 0.3);
  }

  .filter-btn.active {
    background: linear-gradient(135deg, #C9B037 0%, #F4E67B 50%, #C9B037 100%);
    color: #2c2c2c;
    border-color: #C9B037;
    box-shadow: 
      inset 2px 2px 6px rgba(0, 0, 0, 0.2),
      4px 4px 12px rgba(201, 176, 55, 0.4);
    font-weight: 600;
    transform: translateY(-2px);
    padding-left: 2.5rem;
  }

  .filter-btn.active::before {
    opacity: 1;
    background: #2c2c2c;
  }

  @media screen and (max-width: 768px) {
    .filter-btn {
      padding: 1rem 1.5rem;
      font-size: 1.1rem;
    }
    
    .filter-btn.active {
      padding-left: 2rem;
    }
  }

  .filter-actions {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 4rem;
    position: relative;
    z-index: 1;
  }

  .btn {
    padding: 1.5rem 3rem;
    border-radius: 3rem;
    font-size: 1.4rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-block;
    border: none;
    text-transform: uppercase;
    letter-spacing: 0.02em;
    position: relative;
    overflow: hidden;
  }

  .btn::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 0;
    height: 0;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 0%, transparent 70%);
    transition: all 0.6s ease;
    border-radius: 50%;
  }

  .btn:hover::before {
    width: 300px;
    height: 300px;
  }

  .btn-primary {
    background: linear-gradient(135deg, #C9B037 0%, #F4E67B 50%, #C9B037 100%);
    color: #2c2c2c;
    box-shadow: 
      6px 6px 20px rgba(201, 176, 55, 0.4),
      inset 2px 2px 4px rgba(255, 255, 255, 0.3);
    border: 1px solid rgba(201, 176, 55, 0.6);
  }

  .btn-primary:hover {
    transform: translateY(-4px);
    box-shadow: 
      8px 8px 25px rgba(201, 176, 55, 0.5),
      inset 2px 2px 4px rgba(255, 255, 255, 0.4);
  }

  .btn-secondary {
    background: rgba(var(--color-background), 1);
    color: rgb(var(--color-foreground));
    border: 2px solid rgba(var(--color-foreground), 0.3);
    box-shadow: 
      4px 4px 12px rgba(0, 0, 0, 0.1),
      inset 2px 2px 4px rgba(255, 255, 255, 0.9);
  }

  .btn-secondary:hover {
    background: rgba(var(--color-foreground), 0.05);
    transform: translateY(-3px);
    box-shadow: 
      6px 6px 16px rgba(0, 0, 0, 0.15),
      inset 2px 2px 4px rgba(255, 255, 255, 0.95);
  }

  @media screen and (max-width: 768px) {
    .btn {
      padding: 1.2rem 2.5rem;
      font-size: 1.2rem;
    }
  }

  .btn-outline {
    background: rgba(var(--color-background), 1);
    color: rgb(var(--color-button));
    border: 2px solid rgb(var(--color-button));
    box-shadow: 
      4px 4px 12px rgba(0, 0, 0, 0.1),
      inset 2px 2px 4px rgba(255, 255, 255, 0.9);
  }

  .btn-outline:hover {
    background: linear-gradient(135deg, #C9B037 0%, #F4E67B 50%, #C9B037 100%);
    color: #2c2c2c;
    transform: translateY(-3px);
    box-shadow: 
      6px 6px 20px rgba(201, 176, 55, 0.4),
      inset 2px 2px 4px rgba(255, 255, 255, 0.3);
  }

  .fragrance-finder__results {
    margin-top: 5rem;
    position: relative;
    z-index: 1;
  }

  .results-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 3rem;
    padding: 2rem 3rem;
    background: rgba(var(--color-background), 1);
    border-radius: 1.5rem;
    box-shadow: 
      inset 4px 4px 8px rgba(0, 0, 0, 0.08),
      inset -4px -4px 8px rgba(255, 255, 255, 0.9);
  }

  .results-title {
    font-size: 2.5rem;
    font-weight: 700;
    letter-spacing: -0.01em;
    background: linear-gradient(135deg, #C9B037 0%, #F4E67B 50%, #C9B037 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  @media screen and (max-width: 768px) {
    .results-title {
      font-size: 2rem;
    }
  }

  .results-count {
    font-size: 1.4rem;
    opacity: 0.8;
    font-weight: 500;
    padding: 0.8rem 1.5rem;
    background: rgba(var(--color-foreground), 0.05);
    border-radius: 2rem;
    border: 1px solid rgba(var(--color-foreground), 0.1);
  }

  @media screen and (max-width: 768px) {
    .results-count {
      font-size: 1.2rem;
    }
  }

  .results-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 2.5rem;
  }

  .product-card {
    background: rgba(var(--color-background), 1);
    border-radius: 2rem;
    padding: 2.5rem;
    border: 1px solid rgba(var(--color-foreground), 0.08);
    transition: all 0.4s ease;
    box-shadow: 
      8px 8px 20px rgba(0, 0, 0, 0.08),
      -8px -8px 20px rgba(255, 255, 255, 0.9),
      inset 2px 2px 4px rgba(0, 0, 0, 0.03);
    position: relative;
    overflow: hidden;
  }

  .product-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, #C9B037, #F4E67B, #C9B037);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .product-card:hover {
    transform: translateY(-6px) scale(1.02);
    box-shadow: 
      12px 12px 30px rgba(0, 0, 0, 0.12),
      -12px -12px 30px rgba(255, 255, 255, 0.95),
      inset 1px 1px 2px rgba(0, 0, 0, 0.02);
  }

  .product-card:hover::before {
    opacity: 1;
  }

  .product-card__image {
    width: 100%;
    height: 240px;
    object-fit: cover;
    border-radius: 1.5rem;
    margin-bottom: 1.5rem;
    transition: all 0.3s ease;
    box-shadow: 
      4px 4px 12px rgba(0, 0, 0, 0.1),
      inset 1px 1px 2px rgba(255, 255, 255, 0.9);
  }

  .product-card:hover .product-card__image {
    transform: scale(1.05);
    box-shadow: 
      6px 6px 16px rgba(0, 0, 0, 0.15),
      inset 1px 1px 2px rgba(255, 255, 255, 0.95);
  }

  .product-card__title {
    font-size: 1.6rem;
    font-weight: 600;
    margin-bottom: 1rem;
    letter-spacing: -0.01em;
    line-height: 1.3;
  }

  @media screen and (max-width: 768px) {
    .product-card__title {
      font-size: 1.4rem;
    }
  }

  .product-card__price {
    font-size: 1.4rem;
    font-weight: 600;
    background: linear-gradient(135deg, #C9B037 0%, #F4E67B 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 1.2rem;
  }

  @media screen and (max-width: 768px) {
    .product-card__price {
      font-size: 1.2rem;
    }
  }

  .product-card__notes {
    font-size: 1.1rem;
    opacity: 0.8;
    margin-bottom: 1.5rem;
    line-height: 1.5;
    font-style: italic;
  }

  @media screen and (max-width: 768px) {
    .product-card__notes {
      font-size: 1rem;
    }
  }

  .product-card__link {
    text-decoration: none;
    color: inherit;
    display: block;
    height: 100%;
  }

  .no-results {
    text-align: center;
    padding: 5rem 3rem;
    background: rgba(var(--color-background), 1);
    border-radius: 2rem;
    box-shadow: 
      inset 6px 6px 12px rgba(0, 0, 0, 0.08),
      inset -6px -6px 12px rgba(255, 255, 255, 0.9);
    border: 1px solid rgba(var(--color-foreground), 0.05);
  }

  .no-results h4 {
    font-size: 2.2rem;
    margin-bottom: 1.5rem;
    font-weight: 500;
    letter-spacing: -0.01em;
  }

  @media screen and (max-width: 768px) {
    .no-results h4 {
      font-size: 1.8rem;
    }
  }

  .no-results p {
    font-size: 1.3rem;
    opacity: 0.8;
    margin-bottom: 2.5rem;
    line-height: 1.5;
  }

  @media screen and (max-width: 768px) {
    .no-results p {
      font-size: 1.1rem;
    }
  }

  @media screen and (max-width: 768px) {
    .fragrance-finder {
      padding: 4rem 0;
    }

    .fragrance-finder__title {
      font-size: 3rem;
    }

    .filter-group {
      padding: 2rem;
    }

    .filter-options {
      gap: 0.8rem;
    }

    .filter-btn {
      padding: 1rem 1.5rem;
      font-size: 1.1rem;
    }
    
    .filter-btn.active {
      padding-left: 2rem;
    }

    .filter-actions {
      flex-direction: column;
      align-items: center;
      gap: 1.5rem;
    }

    .results-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1.5rem;
      padding: 1.5rem 2rem;
    }

    .results-grid {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .product-card {
      padding: 2rem;
    }

    .no-results {
      padding: 3rem 2rem;
    }
  }

  /* Loading animation */
  .loading {
    text-align: center;
    padding: 3rem;
    font-size: 1.4rem;
    opacity: 0.8;
    background: rgba(var(--color-background), 1);
    border-radius: 1.5rem;
    box-shadow: 
      inset 4px 4px 8px rgba(0, 0, 0, 0.08),
      inset -4px -4px 8px rgba(255, 255, 255, 0.9);
  }

  /* Enhanced visual effects */
  @keyframes shimmer {
    0% { background-position: -1000px 0; }
    100% { background-position: 1000px 0; }
  }

  .filter-btn.active {
    animation: shimmer 2s infinite linear;
    background: linear-gradient(135deg, #C9B037 0%, #F4E67B 25%, #C9B037 50%, #F4E67B 75%, #C9B037 100%);
    background-size: 1000px 100%;
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const filterButtons = document.querySelectorAll('.filter-btn');
  const findButton = document.getElementById('find-fragrances');
  const clearButton = document.getElementById('clear-filters');
  const resultsGrid = document.getElementById('results-grid');
  const resultsCount = document.querySelector('.results-count');
  const noResults = document.getElementById('no-results');
  
  let selectedFilters = {
    family: [],
    notes: [],
    additional: []
  };

  // Handle filter button clicks
  filterButtons.forEach(button => {
    button.addEventListener('click', function() {
      const filterType = this.closest('.filter-options').dataset.filterType;
      const filterValue = this.dataset.filter;
      
      this.classList.toggle('active');
      
      if (this.classList.contains('active')) {
        if (!selectedFilters[filterType].includes(filterValue)) {
          selectedFilters[filterType].push(filterValue);
        }
      } else {
        selectedFilters[filterType] = selectedFilters[filterType].filter(f => f !== filterValue);
      }
    });
  });

  // Clear all filters
  clearButton.addEventListener('click', function() {
    filterButtons.forEach(btn => btn.classList.remove('active'));
    selectedFilters = {
      family: [],
      notes: [],
      additional: []
    };
    resultsGrid.innerHTML = '';
    resultsCount.textContent = '';
    noResults.style.display = 'none';
  });

  // Find fragrances
  findButton.addEventListener('click', function() {
    findFragrances();
  });

  function findFragrances() {
    // Show loading state
    resultsGrid.innerHTML = '<div class="loading">Finding your perfect fragrances...</div>';
    
    // Build search query with smart category mapping
    let searchTags = [];
    
    // Smart category mapping - expand generic categories to specific notes
    const categoryMapping = {
      'Citrus': ['Citrus', 'Lemon', 'Bergamot', 'Grapefruit', 'Orange', 'Mandarin Orange', 'Sicilian Orange', 'Italian Lemon', 'Calabrian Bergamot', 'Sicilian Mandarin', 'Sicilian Bergamot', 'Amalfi Lemon', 'Green Mandarin', 'Bitter Orange', 'Citron'],
      'Floral Notes': ['Floral Notes', 'Rose', 'Jasmine', 'Orange Blossom', 'Neroli', 'Ylang-Ylang', 'Lily', 'Peony', 'Tuberose', 'Bulgarian Rose', 'Turkish Rose', 'Damask Rose', 'May Rose', 'Moroccan Rose', 'Egyptian Jasmine', 'Jasmine Sambac', 'Moroccan Jasmine', 'Water Jasmine', 'Lily of the Valley', 'Freesia', 'Gardenia', 'Carnation', 'Orchid', 'Magnolia', 'Osmanthus', 'Hibiscus', 'African Orange Flower', 'Tunisian Orange Blossom', 'Nectarine Blossom'],
      'Woody Notes': ['Woody Notes', 'Cedar', 'Sandalwood', 'Cedarwood', 'Oakmoss', 'Vetiver', 'Patchouli', 'Guaiac Wood', 'Cashmere Wood', 'Amberwood', 'Indonesian Patchouli Leaf', 'Haitian Vetiver', 'Haitan Vetiver', 'Palo Santo', 'Birch', 'Pine', 'Fir Resin', 'Oak', 'Mahogany', 'Olive Tree'],
      'Amber': ['Amber', 'Ambergris', 'Ambroxan', 'Ambrofix', 'Labdanum', 'Spanish Labdanum', 'Benzoin', 'Siam Benzoin', 'Opoponax', 'Ambrette', 'Ambrettolide'],
      'Fresh': ['Fresh', 'Marine Notes', 'Water Notes', 'Sea Notes', 'Mint', 'Peppermint', 'Green Tea', 'Petitgrain', 'Galbanum', 'Basil', 'Rosemary', 'Sage', 'Clary Sage', 'Thyme', 'Oregano'],
      'Spicy': ['Spicy', 'Pink Pepper', 'Black Pepper', 'Pepper', 'Sichuan Pepper', 'Cardamom', 'Cinnamon', 'Nutmeg', 'Indonesian Nutmeg', 'Ginger', 'Fresh Ginger', 'Ginger Flower', 'Saffron', 'Cloves', 'Star Anise', 'Coriander']
    };
    
    // Process selected filters
    Object.entries(selectedFilters).forEach(([filterType, filterArray]) => {
      filterArray.forEach(filter => {
        if (categoryMapping[filter]) {
          // If it's a category, add all related notes
          searchTags = searchTags.concat(categoryMapping[filter]);
        } else {
          // If it's a specific note, add it directly
          searchTags.push(filter);
        }
      });
    });
    
    // Remove duplicates
    searchTags = [...new Set(searchTags)];
    
    if (searchTags.length === 0) {
      // If no filters selected, show all products
      fetchAllProducts();
      return;
    }
    
    // Search for products with matching tags
    const searchQuery = searchTags.join(' OR ');
    const searchUrl = `/search?q=${encodeURIComponent(searchQuery)}&section_id=template--product-grid`;
    
    fetch(searchUrl)
      .then(response => response.text())
      .then(html => {
        // Parse the HTML to extract product data
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        // Look for various product card selectors
        const productCards = doc.querySelectorAll('.card-wrapper, .product-item, .grid__item, [class*="product"], [class*="card"]');
        
        displayResults(productCards);
      })
      .catch(error => {
        console.error('Error fetching products:', error);
        showNoResults();
      });
  }

  function fetchAllProducts() {
    fetch('/collections/all')
      .then(response => response.text())
      .then(html => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        // Look for various product card selectors
        const productCards = doc.querySelectorAll('.card-wrapper, .product-item, .grid__item, [class*="product"], [class*="card"]');
        
        displayResults(productCards);
      })
      .catch(error => {
        console.error('Error fetching all products:', error);
        showNoResults();
      });
  }

  function displayResults(productCards) {
    if (productCards.length === 0) {
      showNoResults();
      return;
    }

    resultsGrid.innerHTML = '';
    noResults.style.display = 'none';
    
    // Convert NodeList to Array and remove duplicates by URL
    const seenUrls = new Set();
    const uniqueProducts = [];
    
    Array.from(productCards).forEach(card => {
      const link = card.querySelector('a')?.href;
      if (link && !seenUrls.has(link)) {
        seenUrls.add(link);
        uniqueProducts.push(card);
      }
    });
    
    // Take first 12 unique results
    const products = uniqueProducts.slice(0, 12);
    
    products.forEach(card => {
      const productCard = createProductCard(card);
      if (productCard) {
        resultsGrid.appendChild(productCard);
      }
    });
    
    resultsCount.textContent = `${products.length} fragrance${products.length !== 1 ? 's' : ''} found`;
  }

  function createProductCard(originalCard) {
    try {
      // Extract product information with multiple selector options
      const titleElement = originalCard.querySelector('.card__heading a, .product-title, h3, h2, .card__content h3, [class*="title"]');
      const title = titleElement?.textContent?.trim();
      
      const priceElement = originalCard.querySelector('.price, .product-price, .money, [class*="price"]');
      const price = priceElement?.textContent?.trim();
      
      const imageElement = originalCard.querySelector('img');
      const image = imageElement?.src || imageElement?.dataset?.src;
      
      const linkElement = originalCard.querySelector('a');
      const link = linkElement?.href;
      
      if (!title || !link) return null;
      
      const cardElement = document.createElement('div');
      cardElement.className = 'product-card';
      
      cardElement.innerHTML = `
        <a href="${link}" class="product-card__link">
          ${image ? `<img src="${image}" alt="${title}" class="product-card__image" loading="lazy">` : ''}
          <h4 class="product-card__title">${title}</h4>
          ${price ? `<div class="product-card__price">${price}</div>` : ''}
          <div class="product-card__notes">Discover the unique scent profile</div>
        </a>
      `;
      
      return cardElement;
    } catch (error) {
      console.error('Error creating product card:', error);
      return null;
    }
  }

  function showNoResults() {
    resultsGrid.innerHTML = '';
    noResults.style.display = 'block';
    resultsCount.textContent = '0 fragrances found';
  }
});
</script>

{% schema %}
{
  "name": "Fragrance Finder",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Find Your Perfect Fragrance"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Discover your signature scent by exploring different fragrance families, notes, and occasions. Our fragrance finder helps you navigate our collection to find the perfect match for your personality and style.</p>"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "Accent 1"
        },
        {
          "value": "accent-2",
          "label": "Accent 2"
        },
        {
          "value": "background-1",
          "label": "Background 1"
        },
        {
          "value": "background-2",
          "label": "Background 2"
        },
        {
          "value": "inverse",
          "label": "Inverse"
        }
      ],
      "default": "background-1",
      "label": "Color scheme"
    }
  ],
  "presets": [
    {
      "name": "Fragrance Finder"
    }
  ]
}
{% endschema %}
